/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AirTicketReservationSystem;

import java.awt.Color;
import java.sql.*;
import javax.swing.JOptionPane;
import java.awt.Image;
import java.awt.Graphics;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Formatter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JWindow;
import javax.swing.SwingConstants;

public class MDIForm extends javax.swing.JFrame {

    public static Connection dbcon;
    public static boolean loggedin=false;
    public static String loggedUserID;
    public static String loggedUserAccess;
    public static boolean frmSigninActive;
    public static boolean frmViewAccRecipActive;
    public static boolean frmViewRecipActive;
    public static boolean frmNewRecipActive;
    public static boolean frmNewCustActive;
    public static boolean frmViewAccAdminActive;
    public static boolean frmNewAdminActive;
    public static boolean frmViewAdminActive;
    public static boolean frmViewCustActive;
    public static boolean frmReserveTicketsActive;
    public static boolean frmViewTicketsActive;
    public static boolean frmViewPaymentsActive;
    public static boolean frmDatabaseControlActive;
    public static boolean frmAboutActive;

    
    public MDIForm() {
        
        initComponents();
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        dlgSettings = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        txtPort = new javax.swing.JTextField();
        lblPort = new javax.swing.JLabel();
        txtHostname = new javax.swing.JTextField();
        lblHostname = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        lblPassword = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnApply = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnSetdefaults = new javax.swing.JButton();
        ImageIcon icon = new ImageIcon(getClass().getResource("001.jpg"));
        Image image = icon.getImage();
        DesktopPane = new javax.swing.JDesktopPane(){
            public void paintComponent(Graphics g){
                g.drawImage(image,0,0,getWidth(),getHeight(),this);
            }
        };
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuSignIn = new javax.swing.JMenuItem();
        menuExit = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        dlgSettings.setMinimumSize(new java.awt.Dimension(850, 310));
        dlgSettings.setModalityType(java.awt.Dialog.ModalityType.TOOLKIT_MODAL);
        dlgSettings.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                dlgSettingsWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtPort.setText("3306");
        txtPort.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPortFocusLost(evt);
            }
        });

        lblPort.setText("Port :");

        txtHostname.setText("localhost");
        txtHostname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtHostnameFocusLost(evt);
            }
        });

        lblHostname.setText("Host Name :");
        lblHostname.setToolTipText("");

        lblUsername.setText("User Name :");

        txtUsername.setText("root");
        txtUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUsernameFocusLost(evt);
            }
        });

        txtPassword.setText("root");
        txtPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPasswordFocusLost(evt);
            }
        });

        lblPassword.setText("Password :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Setup Connection");

        jLabel6.setText("Name or IP address of the server host - and TCP/IP port.");

        jLabel7.setText("Name of the user to connect with.");

        jLabel8.setText("The user's password.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblHostname)
                        .addGap(18, 18, 18)
                        .addComponent(txtHostname, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblPort)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6))
                    .addComponent(jLabel5)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUsername)
                            .addComponent(lblPassword))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUsername)
                            .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHostname)
                    .addComponent(txtHostname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPort)
                    .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPassword)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        btnApply.setText("Apply");
        btnApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnSetdefaults.setText("Set Defaults");
        btnSetdefaults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetdefaultsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dlgSettingsLayout = new javax.swing.GroupLayout(dlgSettings.getContentPane());
        dlgSettings.getContentPane().setLayout(dlgSettingsLayout);
        dlgSettingsLayout.setHorizontalGroup(
            dlgSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgSettingsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dlgSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dlgSettingsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSetdefaults)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnApply))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        dlgSettingsLayout.setVerticalGroup(
            dlgSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dlgSettingsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dlgSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(btnApply)
                    .addComponent(btnSetdefaults))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Air Ticket Reservation System");
        setPreferredSize(new java.awt.Dimension(1027, 650));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        javax.swing.GroupLayout DesktopPaneLayout = new javax.swing.GroupLayout(DesktopPane);
        DesktopPane.setLayout(DesktopPaneLayout);
        DesktopPaneLayout.setHorizontalGroup(
            DesktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 824, Short.MAX_VALUE)
        );
        DesktopPaneLayout.setVerticalGroup(
            DesktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        getContentPane().add(DesktopPane, java.awt.BorderLayout.CENTER);

        jMenu1.setText("System");

        menuSignIn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuSignIn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AirTicketReservationSystem/IconSignin.png"))); // NOI18N
        menuSignIn.setText("Sign In");
        menuSignIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSignInActionPerformed(evt);
            }
        });
        jMenu1.add(menuSignIn);

        menuExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        menuExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AirTicketReservationSystem/IconExit.png"))); // NOI18N
        menuExit.setText("Exit");
        menuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuExitActionPerformed(evt);
            }
        });
        jMenu1.add(menuExit);

        jMenuBar2.add(jMenu1);

        jMenu3.setText("Settings");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar2.add(jMenu3);

        jMenu2.setText("About");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar2.add(jMenu2);

        setJMenuBar(jMenuBar2);

        getAccessibleContext().setAccessibleDescription("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void menuSignInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSignInActionPerformed
        if(this.dbcon!=null){
            if(loggedin){
                int userChoice = JOptionPane.showConfirmDialog(null,"You are already logged in. Do you want to logout first?", "Logout First?", JOptionPane.OK_CANCEL_OPTION);
                if(userChoice==0){
                    loggedin=false;
                    loggedUserID="";
                    loggedUserAccess="";
                    DesktopPane.removeAll();
                    DesktopPane.repaint();
                    frmSignin s =new frmSignin();
                    DesktopPane.add(s);
                    int height = DesktopPane.getHeight();
                    int width = DesktopPane.getWidth();
                    int x = (int)(height-s.getHeight())/2;
                    int y = (int)(width-s.getWidth())/2;
                    s.setLocation(y,x);
                    s.setVisible(true);
                }

            }
            else{
                if(frmSigninActive==false){
                    frmSignin s =new frmSignin();
                    this.DesktopPane.add(s);
                    int height = DesktopPane.getHeight();
                    int width = DesktopPane.getWidth();
                    int x = (int)(height-s.getHeight())/2;
                    int y = (int)(width-s.getWidth())/2;
                    s.setLocation(y,x);
                    s.setVisible(true);
                }
            }
        }
        else{
            int userChoice = JOptionPane.showConfirmDialog(DesktopPane, "No Database Connection. Do you want to setup now?", "Setup the Connection", JOptionPane.YES_NO_OPTION);
            if(userChoice==0){
                dlgSettings.setSize(850, 310);
                dlgSettings.setTitle("Settings");
                dlgSettings.setLocationRelativeTo(this);
                dlgSettings.setVisible(true);
            }
        }
    }//GEN-LAST:event_menuSignInActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formWindowActivated

    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        dbcon = dbConnectr.Connect();
        if(dbcon!=null){
            frmSignin s =new frmSignin();
            this.DesktopPane.add(s);
            int height = DesktopPane.getHeight();
            int width = DesktopPane.getWidth();
            int x = (int)(height-s.getHeight())/2;
            int y = (int)(width-s.getWidth())/2;
            s.setLocation(y,x);
            s.setVisible(true);
        }
    }//GEN-LAST:event_formWindowOpened

    private void menuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuExitActionPerformed

        int userChoice = JOptionPane.showConfirmDialog(null,"Do you want to exit?", "Confirm Exit", JOptionPane.YES_NO_OPTION);
        
        if(userChoice==0)
        {
            System.exit(0);
        }
    }//GEN-LAST:event_menuExitActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int userChoice = JOptionPane.showConfirmDialog(null,"Do you want to exit?", "Confirm Exit", JOptionPane.YES_NO_OPTION);
        
        if(userChoice==0)
        {
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        if(!MDIForm.frmAboutActive){
            frmAbout ab =new frmAbout();
            this.DesktopPane.add(ab);
            int height = DesktopPane.getHeight();
            int width = DesktopPane.getWidth();
            int x = (int)(height-ab.getHeight())/2;
            int y = (int)(width-ab.getWidth())/2;
            ab.setLocation(y,x);
            ab.setVisible(true);
        }
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        dlgSettings.setSize(850, 310);
        dlgSettings.setTitle("Settings");
        dlgSettings.setLocationRelativeTo(this);
        dlgSettings.setVisible(true);
    }//GEN-LAST:event_jMenu3MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dlgSettings.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyActionPerformed
        if(ckFields()){    
            try {
                Formatter file = new Formatter("conData.txt");
                file.format("%s %s %s %s", this.txtHostname.getText(), this.txtPort.getText(), this.txtUsername.getText(), this.txtPassword.getText());
                file.close();
                dbcon = dbConnectr.Connect();
                dlgSettings.dispose();
            } 
            catch(FileNotFoundException ex) {
                JOptionPane.showMessageDialog(dlgSettings,"Cannot find the conData.txt.", "Connection Setup Error", JOptionPane.ERROR_MESSAGE);
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(dlgSettings,"Cannot create the connection.", "Connection Setup Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnApplyActionPerformed

    private void dlgSettingsWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_dlgSettingsWindowOpened

            try{
                Scanner sc = new Scanner(new File("conData.txt"));
                while(sc.hasNext()){
                    this.txtHostname.setText(sc.next());
                    this.txtPort.setText(sc.next());
                    this.txtUsername.setText(sc.next());
                    this.txtPassword.setText(sc.next());
                }
            }
            catch(FileNotFoundException e){
                this.txtHostname.setText("localhost");
                this.txtPort.setText("3306");
                this.txtUsername.setText("root");
                this.txtPassword.setText("root");
            }
            catch(Exception e){
                this.txtHostname.setText("localhost");
                this.txtPort.setText("3306");
                this.txtUsername.setText("root");
                this.txtPassword.setText("root");
            }

    }//GEN-LAST:event_dlgSettingsWindowOpened

    private void btnSetdefaultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetdefaultsActionPerformed
        this.txtHostname.setText("localhost");
        this.txtPort.setText("3306");
        this.txtUsername.setText("root");
        this.txtPassword.setText("root");
    }//GEN-LAST:event_btnSetdefaultsActionPerformed

    private void txtHostnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHostnameFocusLost
        cktxtHostname();
    }//GEN-LAST:event_txtHostnameFocusLost

    private void txtUsernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUsernameFocusLost
        cktxtUsername();
    }//GEN-LAST:event_txtUsernameFocusLost

    private void txtPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusLost
        cktxtPassword();
    }//GEN-LAST:event_txtPasswordFocusLost

    private void txtPortFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPortFocusLost
        cktxtPort();
    }//GEN-LAST:event_txtPortFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MDIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MDIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MDIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MDIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MDIForm().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JDesktopPane DesktopPane;
    private javax.swing.JButton btnApply;
    private javax.swing.JButton btnSetdefaults;
    public static javax.swing.JDialog dlgSettings;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblHostname;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPort;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JMenuItem menuExit;
    private javax.swing.JMenuItem menuSignIn;
    private javax.swing.JTextField txtHostname;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPort;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icon.png")));
    }
    
    public boolean ckFields(){
        if(cktxtHostname() & cktxtPort() & cktxtUsername() & cktxtPassword()){
            return true;
        }
        else{
            return false;
        }
    }
    
    public boolean cktxtHostname(){
        if(this.txtHostname.getText().equals("")){
            this.lblHostname.setForeground(Color.red);
            return false;
        }
        else{
            this.lblHostname.setForeground(Color.black);
            return true;
        }
    }
    public boolean cktxtPort(){
        if(this.txtPort.getText().equals("")){
            this.lblPort.setForeground(Color.red);
            return false;
        }
        else{
            String port = this.txtPort.getText();
            boolean portOK = true;
            for(int x=0; x<port.length(); x++){
                if(Character.isLetter(port.charAt(x))){
                    portOK = false;
                    break;
                }
            }
            if(portOK){
                this.lblPort.setForeground(Color.black);
                return true;
            }
            else{
                this.lblPort.setForeground(Color.red);
                return false;
            }   
        }
    }
    
    public boolean cktxtUsername(){
        if(this.txtUsername.getText().equals("")){
            this.lblUsername.setForeground(Color.red);
            return false;
        }
        else{
            this.lblUsername.setForeground(Color.black);
            return true;
        }
    }
    
    public boolean cktxtPassword(){
        if(this.txtPassword.getText().equals("")){
            this.lblPassword.setForeground(Color.red);
            return false;
        }
        else{
            this.lblPassword.setForeground(Color.black);
            return true;
        }
    }  
}
