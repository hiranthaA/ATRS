/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AirTicketReservationSystem;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

public class frmNewRecip extends javax.swing.JInternalFrame {
    Connection dbcon=null;
    public frmNewRecip() {
        initComponents();
        dbcon = dbConnectr.Connect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrpGender = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        txtDOB = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        radioMale = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        radioFemale = new javax.swing.JRadioButton();
        jLabel14 = new javax.swing.JLabel();
        txtContactno = new javax.swing.JTextField();
        eiDOB = new javax.swing.JLabel();
        eiGender = new javax.swing.JLabel();
        eiContactno = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        eiEmail = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        profilePic = new javax.swing.JPanel();
        lblProfPic = new javax.swing.JLabel();
        btnAddImage = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtLname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtFname = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtNIC = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        eiFname = new javax.swing.JLabel();
        eiLname = new javax.swing.JLabel();
        eiNIC = new javax.swing.JLabel();
        eiAddress = new javax.swing.JLabel();
        eiCity = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblRecipId = new javax.swing.JLabel();
        eiFname1 = new javax.swing.JLabel();
        btnAddRecip = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        btnRemoveImage = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        txtUsername = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        eiUsername = new javax.swing.JLabel();
        eiPassword = new javax.swing.JLabel();
        eiConpassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        txtConpassword = new javax.swing.JPasswordField();

        setClosable(true);
        setTitle("Add New Reciption");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        txtDOB.setToolTipText("");
        txtDOB.setDateFormatString("d-MM-yyyy");

        jLabel9.setText("Date of Birth :");

        btngrpGender.add(radioMale);
        radioMale.setText("Male");
        radioMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioMaleActionPerformed(evt);
            }
        });

        jLabel11.setText("Gender :");

        btngrpGender.add(radioFemale);
        radioFemale.setText("Female");
        radioFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioFemaleActionPerformed(evt);
            }
        });

        jLabel14.setText("Contact No :");

        txtContactno.setToolTipText("(eg : 0123456789)");

        eiDOB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AirTicketReservationSystem/error.png"))); // NOI18N

        eiGender.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AirTicketReservationSystem/error.png"))); // NOI18N

        eiContactno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AirTicketReservationSystem/error.png"))); // NOI18N

        txtEmail.setToolTipText("(eg : name@example.com)");

        eiEmail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AirTicketReservationSystem/error.png"))); // NOI18N

        jLabel13.setText("E - mail :");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtContactno, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eiContactno))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(radioMale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radioFemale)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(eiGender)
                            .addComponent(eiDOB)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eiEmail)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel9))
                    .addComponent(eiDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(radioMale)
                        .addComponent(radioFemale)
                        .addComponent(jLabel11))
                    .addComponent(eiGender))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(txtContactno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(eiContactno, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(eiEmail)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        profilePic.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblProfPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AirTicketReservationSystem/ppicon.png"))); // NOI18N

        javax.swing.GroupLayout profilePicLayout = new javax.swing.GroupLayout(profilePic);
        profilePic.setLayout(profilePicLayout);
        profilePicLayout.setHorizontalGroup(
            profilePicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilePicLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblProfPic, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        profilePicLayout.setVerticalGroup(
            profilePicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilePicLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblProfPic, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnAddImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AirTicketReservationSystem/IconAddImage.png"))); // NOI18N
        btnAddImage.setText("+");
        btnAddImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddImageActionPerformed(evt);
            }
        });

        txtLname.setToolTipText("(Maximum 20 Characters)");

        jLabel3.setText("Last Name :");

        txtFname.setToolTipText("(Maximum 20 Characters)");

        txtAddress.setColumns(20);
        txtAddress.setRows(5);
        jScrollPane1.setViewportView(txtAddress);

        jLabel2.setText("First Name :");

        jLabel8.setText("Address :");

        jLabel12.setText("NIC No :");

        txtNIC.setToolTipText("(eg : 123456789v)");

        jLabel15.setText("City :");

        eiFname.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AirTicketReservationSystem/error.png"))); // NOI18N

        eiLname.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AirTicketReservationSystem/error.png"))); // NOI18N

        eiNIC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AirTicketReservationSystem/error.png"))); // NOI18N

        eiAddress.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AirTicketReservationSystem/error.png"))); // NOI18N

        eiCity.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AirTicketReservationSystem/error.png"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Reciption ID :");

        lblRecipId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblRecipId.setText("lblRecipId");

        eiFname1.setText("              ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblRecipId, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(eiFname1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtNIC, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtLname, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(eiCity)
                                    .addComponent(eiAddress)
                                    .addComponent(eiNIC)
                                    .addComponent(eiLname)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFname, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(eiFname)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(lblRecipId))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(eiFname1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtFname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(eiFname, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eiLname, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtLname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNIC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(eiAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(41, 41, 41)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(eiCity, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel15))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(83, 83, 83))))
                    .addComponent(eiNIC, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        btnAddRecip.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AirTicketReservationSystem/IconSave.png"))); // NOI18N
        btnAddRecip.setText("Add Reciption");
        btnAddRecip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRecipActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Reciption Details");

        btnRemoveImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AirTicketReservationSystem/IconRemoveImage.png"))); // NOI18N
        btnRemoveImage.setText("-");
        btnRemoveImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveImageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(profilePic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(btnAddImage, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnRemoveImage, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(btnAddRecip, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(180, 180, 180))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(profilePic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddImage)
                            .addComponent(btnRemoveImage))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddRecip)
                .addGap(19, 19, 19))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel1.setText("Username :");

        jLabel5.setText("Password :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Account info");

        jLabel7.setText("Confirm Password :");

        eiUsername.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AirTicketReservationSystem/error.png"))); // NOI18N

        eiPassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AirTicketReservationSystem/error.png"))); // NOI18N

        eiConpassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AirTicketReservationSystem/error.png"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eiUsername)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel5)
                        .addGap(17, 17, 17)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eiPassword)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtConpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eiConpassword)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel5)
                        .addComponent(jLabel7)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtConpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(eiUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eiPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eiConpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 812, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        MDIForm.frmNewRecipActive = true;
        this.lblRecipId.setText(generateUserID("Recip"));
        eiUsername.setVisible(false);
        eiPassword.setVisible(false);
        eiConpassword.setVisible(false);
        eiFname.setVisible(false);
        eiLname.setVisible(false);
        eiNIC.setVisible(false);
        eiAddress.setVisible(false);
        eiCity.setVisible(false);
        eiDOB.setVisible(false);
        eiGender.setVisible(false);
        eiEmail.setVisible(false);
        eiContactno.setVisible(false);
        this.defprofimg = this.lblProfPic.getIcon();
    }//GEN-LAST:event_formInternalFrameOpened

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        MDIForm.frmNewRecipActive = false;
    }//GEN-LAST:event_formInternalFrameClosed

    private void radioMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioMaleActionPerformed

    }//GEN-LAST:event_radioMaleActionPerformed

    private void radioFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioFemaleActionPerformed

    }//GEN-LAST:event_radioFemaleActionPerformed

    private void btnAddRecipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRecipActionPerformed
        if(checkEntryDetails()){
            int userChoice = JOptionPane.showConfirmDialog(null,"Are you sure details are correct?", "Confirm Details", JOptionPane.YES_NO_OPTION);
            
            if(userChoice==0){
                String insert_logininfo_SQL = "insert into logininfo(userID,username,password,accessType) values(?,?,?,?)";
                String insert_userinfo_SQL = "insert into userinfo(userID,fname,lname,address,gender,dob,nic,city,email,contact,profimg) values(?,?,?,?,?,?,?,?,?,?,?)";
                try{
                    PreparedStatement pst = dbcon.prepareStatement(insert_logininfo_SQL);
                    PreparedStatement pst2 = dbcon.prepareStatement(insert_userinfo_SQL);
                    pst.setString(1, this.lblRecipId.getText());
                    pst.setString(2, this.txtUsername.getText());
                    pst.setString(3, this.txtPassword.getText());
                    pst.setString(4, "recip");
                    
                    pst2.setString(1, this.lblRecipId.getText());
                    pst2.setString(2, this.txtFname.getText());
                    pst2.setString(3, this.txtLname.getText());
                    pst2.setString(4, this.txtAddress.getText());
                    pst2.setString(5, this.btngrpGender.getSelection().getActionCommand());
                    DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                    String dob = df.format(txtDOB.getDate());
                    pst2.setString(6, dob);
                    pst2.setString(7, this.txtNIC.getText());
                    pst2.setString(8, this.txtCity.getText());
                    pst2.setString(9, this.txtEmail.getText());
                    pst2.setString(10, this.txtContactno.getText());
                    pst2.setBytes(11, prof_img);
                    pst.execute();
                    pst2.execute();
                    this.increaseRecipByOne();
                    JOptionPane.showMessageDialog(null, "Login "+this.lblRecipId.getText()+" was successfully created.", "Adding Reciption Complete", JOptionPane.INFORMATION_MESSAGE);
                    try {
                        this.setClosed(true);
                    } 
                    catch(Exception ex) {
                        JOptionPane.showMessageDialog(null, "Something happened.","Error Exit Window",JOptionPane.ERROR_MESSAGE);
                    }
                }
                catch(Exception exc){
                    JOptionPane.showMessageDialog(null, "Database connection failed while saving information","Database Connection Error",JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Fill all the details correctly", "Adding Details Failed!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddRecipActionPerformed

    private void btnAddImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddImageActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.images","png","jpg");  
        jfc.addChoosableFileFilter(filter);
        jfc.setDialogTitle("Select an image");
        int result = jfc.showOpenDialog(null);
        if(result==JFileChooser.APPROVE_OPTION){
            File imgfile = jfc.getSelectedFile();
            imgpath = imgfile.getAbsolutePath();
            this.lblProfPic.setIcon(getImage(imgpath));
            try{
                File image = new File(imgpath);
                FileInputStream fis = new FileInputStream(image);
                ByteArrayOutputStream bos = new ByteArrayOutputStream();
                byte[] buf = new byte[1024];
                for(int readNum; (readNum=fis.read(buf))!=-1;){
                    bos.write(buf,0,readNum);
                }
                prof_img = bos.toByteArray();
            }
            catch(Exception e){
                e.printStackTrace();
            }
        }  
    }//GEN-LAST:event_btnAddImageActionPerformed

    private void btnRemoveImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveImageActionPerformed
        prof_img = null;
        this.lblProfPic.setIcon(this.defprofimg);
    }//GEN-LAST:event_btnRemoveImageActionPerformed
 
    public ImageIcon getImage(String path){
        ImageIcon ProfImg = new ImageIcon(path);
        Image img = ProfImg.getImage();
        Image newImg = img.getScaledInstance(lblProfPic.getWidth(), lblProfPic.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon finalImage = new ImageIcon(newImg);
        return finalImage;
    }
    
    public void increaseRecipByOne(){
        String SQL = "select Recip from count";
        int nRecip=0;
        try{
            Statement stmnt = dbcon.createStatement();
            ResultSet rs = stmnt.executeQuery(SQL);
            while(rs.next()){
                nRecip = rs.getInt("Recip");
            }
            
            String SQL2 = "update count set Recip="+(nRecip+1)+" where Recip="+nRecip;
            
            try{
                Statement stmnt2 = dbcon.createStatement();
                stmnt.executeUpdate(SQL2);
            }
            catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Database connection failed while saving information","Database Connection Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Database connection failed while saving information","Database Connection Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public String generateUserID(String accType){
        String SQL = "select * from count";
        String aType="";
        int nUsers=0;
        String UserID="";
        
        try{
            Statement stmnt = dbcon.createStatement();
            
            ResultSet rs = stmnt.executeQuery(SQL);
            while(rs.next()){
                if(accType=="Admin"){
                    aType="A";
                    nUsers = rs.getInt("Admin");
                }
                else if(accType=="Recip"){
                    aType="R";
                    nUsers = rs.getInt("Recip");
                }
                else if(accType=="Cust"){
                    aType="C";
                    nUsers = rs.getInt("Cust");
                }
            } 
        }
        catch(Exception exc){
            JOptionPane.showMessageDialog(null, "Database connection failed while generating userID","Database Connection Error",JOptionPane.ERROR_MESSAGE);
        }
        
        if(nUsers<9){
            UserID=aType.concat("000").concat(Integer.toString(nUsers+1));
        }
        else if(nUsers<99){
            UserID=aType.concat("00").concat(Integer.toString(nUsers+1));
        }
        else if(nUsers<999){
            UserID=aType.concat("0").concat(Integer.toString(nUsers+1));
        }
        else if(nUsers<9999){
            UserID=aType.concat(Integer.toString(nUsers+1));
        }
        else{
            JOptionPane.showMessageDialog(null, "Cannot Generate UserID. Maximum Users Reached","Error",JOptionPane.ERROR_MESSAGE);
        }
        return UserID;
    }
    
    public boolean cktxtFname(){
        if(txtFname.getText().equals("")){
            eiFname.setVisible(true);
            eiFname.setToolTipText("Empty Field!");
            return false;
        }
        else{
            if(txtFname.getText().length()>20){
                eiFname.setVisible(true);
                eiFname.setToolTipText("Maximum characters exceed!");
                return false;
            }
            else{
                eiFname.setVisible(false);
                return true;
            }
        }
    }
    
    public boolean cktxtLname(){
        if(txtLname.getText().equals("")){
            eiLname.setVisible(true);
            eiLname.setToolTipText("Empty Field!");
            return false;
        }
        else{
            if(txtLname.getText().length()>20){
                eiLname.setVisible(true);
                eiLname.setToolTipText("Maximum characters exceed!");
                return false;
            }
            else{
                eiLname.setVisible(false);
                return true;
            }
        }
    }
    
    public boolean cktxtNIC(){
                
        if(txtNIC.getText().equals("")){
            eiNIC.setVisible(true);
            eiNIC.setToolTipText("Empty Field!");
            return false;
        }
        else{
            if(txtNIC.getText().length()==10){
                String NIC = txtNIC.getText();
                if(Character.isDigit(NIC.charAt(0))==false){
                    eiNIC.setVisible(true);
                    eiNIC.setToolTipText("Invalid NIC!");
                    return false;
                }
                else if(Character.isDigit(NIC.charAt(1))==false){
                    eiNIC.setVisible(true);
                    eiNIC.setToolTipText("Invalid NIC!");
                    return false;
                }
                else if(Character.isDigit(NIC.charAt(2))==false){
                    eiNIC.setVisible(true);
                    eiNIC.setToolTipText("Invalid NIC!");
                    return false;
                }
                else if(Character.isDigit(NIC.charAt(3))==false){
                    eiNIC.setVisible(true);
                    eiNIC.setToolTipText("Invalid NIC!");
                    return false;
                }
                else if(Character.isDigit(NIC.charAt(4))==false){
                    eiNIC.setVisible(true);
                    eiNIC.setToolTipText("Invalid NIC!");
                    return false;
                }
                else if(Character.isDigit(NIC.charAt(5))==false){
                    eiNIC.setVisible(true);
                    eiNIC.setToolTipText("Invalid NIC!");
                    return false;
                }
                else if(Character.isDigit(NIC.charAt(6))==false){
                    eiNIC.setVisible(true);
                    eiNIC.setToolTipText("Invalid NIC!");
                    return false;
                }
                else if(Character.isDigit(NIC.charAt(7))==false){
                    eiNIC.setVisible(true);
                    eiNIC.setToolTipText("Invalid NIC!");
                    return false;
                }
                else if(Character.isDigit(NIC.charAt(8))==false){
                    eiNIC.setVisible(true);
                    eiNIC.setToolTipText("Invalid NIC!");
                    return false;
                }
                else if(NIC.charAt(9)=='v' || NIC.charAt(9)=='V'){
                    boolean nicavailable=false;
                    String SQL = "select nic from userinfo";
                    try{
                        Statement stmnt = dbcon.createStatement();
                        ResultSet rs = stmnt.executeQuery(SQL);
                        
                        while(rs.next()){
                            if(rs.getString("nic").equalsIgnoreCase(NIC)){
                                nicavailable=true;
                                break;
                            }
                        }
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null, "Communicating with database failed", "Check NIC Failed!", JOptionPane.ERROR_MESSAGE);

                    }
                    if(nicavailable==true){
                        eiNIC.setVisible(true);
                        eiNIC.setToolTipText("This NIC already exists!");
                        return false;
                    }
                    else{
                        eiNIC.setVisible(false);
                        return true;
                    }
                }
                else{
                    eiNIC.setVisible(true);
                    eiNIC.setToolTipText("Invalid NIC!");
                    return false;
                }
            }
            else{
                eiNIC.setVisible(true);
                eiNIC.setToolTipText("Invalid NIC!");
                return false;
            }
        }
    }
    
    public boolean cktxtAddress(){
        if(txtAddress.getText().equals("")){
            eiAddress.setVisible(true);
            eiAddress.setToolTipText("Empty Field!");
            return false;
        }
        else{
            if(txtAddress.getText().length()>100){
                eiAddress.setVisible(true);
                eiAddress.setToolTipText("Maximum characters exceed!");
                return false;
            }
            else{
                eiAddress.setVisible(false);
                return true;
            }
        }
    }
    
    public boolean cktxtCity(){
        if(txtCity.getText().equals("")){
            eiCity.setVisible(true);
            eiCity.setToolTipText("Empty Field!");
            return false;
        }
        else{
            if(txtCity.getText().length()>15){
                eiCity.setVisible(true);
                eiCity.setToolTipText("Maximum characters exceed!");
                return false;
            }
            else{
                eiCity.setVisible(false);
                return true;
            }
        }
    }
    
    public boolean ckGender(){
        if(this.radioMale.isSelected()){
            this.radioMale.setActionCommand("Male");
            eiGender.setVisible(false);
            return true;
        }
        else if(this.radioFemale.isSelected()){
            this.radioFemale.setActionCommand("Female");
            eiGender.setVisible(false);
            return true;
        }
        else{
            eiGender.setVisible(true);
            eiGender.setToolTipText("Not Selected!");
            return false;
        }
    }
    
    public boolean cktxtEmail(){
        
        int countAt=0;
        
        if(txtEmail.getText().equals("")){
            eiEmail.setVisible(true);
            eiEmail.setToolTipText("Empty Field!");
            return false;
        }
        else{
            if(txtEmail.getText().length()>50){
                eiEmail.setVisible(true);
                eiEmail.setToolTipText("Maximum characters exceed!");
                return false;
            }
            else{
                for(int x=0; x<txtEmail.getText().length();x++){
                    if(txtEmail.getText().charAt(x)=='@'){
                        countAt++;
                    }
                }
                if(countAt==1){
                    if(txtEmail.getText().endsWith("@")){
                        eiEmail.setVisible(true);
                        eiEmail.setToolTipText("Invalid email address!");
                        return false;
                    }
                    else{
                        eiEmail.setVisible(false);
                        return true;
                    }
                }
                else{
                    eiEmail.setVisible(true);
                    eiEmail.setToolTipText("Invalid email address!");
                    return false;
                }
            }
        }
    }
    
    public boolean cktxtContactno(){
        if(txtContactno.getText().equals("")){
            eiContactno.setVisible(true);
            eiContactno.setToolTipText("Empty Field!");
            return false;
        }
        else{
            if(txtContactno.getText().length()==10){
                if(txtContactno.getText().startsWith("0")==false){
                    eiContactno.setVisible(true);
                    eiContactno.setToolTipText("Invalid contact number!");
                    return false;
                }
                else if(Character.isDigit(txtContactno.getText().charAt(1))==false){
                    eiContactno.setVisible(true);
                    eiContactno.setToolTipText("Invalid contact number!");
                    return false;
                }
                else if(Character.isDigit(txtContactno.getText().charAt(2))==false){
                    eiContactno.setVisible(true);
                    eiContactno.setToolTipText("Invalid contact number!");
                    return false;
                }
                else if(Character.isDigit(txtContactno.getText().charAt(3))==false){
                    eiContactno.setVisible(true);
                    eiContactno.setToolTipText("Invalid contact number!");
                    return false;
                }
                else if(Character.isDigit(txtContactno.getText().charAt(4))==false){
                    eiContactno.setVisible(true);
                    eiContactno.setToolTipText("Invalid contact number!");
                    return false;
                }
                else if(Character.isDigit(txtContactno.getText().charAt(5))==false){
                    eiContactno.setVisible(true);
                    eiContactno.setToolTipText("Invalid contact number!");
                    return false;
                }
                else if(Character.isDigit(txtContactno.getText().charAt(6))==false){
                    eiContactno.setVisible(true);
                    eiContactno.setToolTipText("Invalid contact number!");
                    return false;
                }
                else if(Character.isDigit(txtContactno.getText().charAt(7))==false){
                    eiContactno.setVisible(true);
                    eiContactno.setToolTipText("Invalid contact number!");
                    return false;
                }
                else if(Character.isDigit(txtContactno.getText().charAt(8))==false){
                    eiContactno.setVisible(true);
                    eiContactno.setToolTipText("Invalid contact number!");
                    return false;
                }
                else if(Character.isDigit(txtContactno.getText().charAt(9))==false){
                    eiContactno.setVisible(true);
                    eiContactno.setToolTipText("Invalid contact number!");
                    return false;
                }
                else{
                    eiContactno.setVisible(false);
                    return true;
                }
            }
            else{
                eiContactno.setVisible(true);
                eiContactno.setToolTipText("Invalid contact number!");
                return false;
            }
        }
    }
    
    public boolean cktxtDOB(){
        try{
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            String date = df.format(txtDOB.getDate());
            if(date.equals("")){
                eiDOB.setVisible(true);
                eiDOB.setToolTipText("Not Selected");
                return false;
            }
            else{
                eiDOB.setVisible(false);
                return true;
            }
        }
        catch(Exception exc){
            eiDOB.setVisible(true);
            eiDOB.setToolTipText("Invalid Date of Birth");
            return false;
        }
    }
    
    public boolean cktxtUsername(){
        if(txtUsername.getText().equals("")){
            eiUsername.setVisible(true);
            eiUsername.setToolTipText("Empty Field!");
            return false;
        }
        else{
            if(txtUsername.getText().length()>15){
                eiUsername.setVisible(true);
                eiUsername.setToolTipText("Maximum characters exceed!");
                return false;
            }
            else{
                if(ckExistinguname()){
                    eiUsername.setVisible(true);
                    eiUsername.setToolTipText("Username exist!");
                    return false;
                }
                else{
                    eiUsername.setVisible(false);
                    return true;
                }
            }
            
        }
    }
    
    public boolean cktxtProfImg(){
        if(prof_img==null){
            try{
                Icon icon = this.lblProfPic.getIcon();
                BufferedImage img = new BufferedImage(icon.getIconWidth(),icon.getIconHeight(),BufferedImage.TYPE_INT_ARGB);
                ByteArrayOutputStream bos = new ByteArrayOutputStream();
                ImageIO.write(img, "png", bos);
                prof_img = bos.toByteArray();
            }
            catch(Exception e){
                e.printStackTrace();
            }
            return true;
        }
        else{
            return true;
        }
    }
    
    public boolean cktxtConpassword(){
        if(txtConpassword.getText().equals("")){
            eiConpassword.setVisible(true);
            eiConpassword.setToolTipText("Empty Field!");
            return false;
        }
        else{
            if(txtPassword.getText().equals(txtConpassword.getText())){
                eiConpassword.setVisible(false);
                return true;
            }
            else{
                eiConpassword.setVisible(true);
                eiConpassword.setToolTipText("Passwords does not match!");
                return false;
            }
        }
    }
    
    public boolean cktxtPassword(){
        if(txtPassword.getText().equals("")){
            eiPassword.setVisible(true);
            eiPassword.setToolTipText("Empty Field!");
            return false;
        }
        else{
            if(txtPassword.getText().length()>15){
                eiPassword.setVisible(true);
                eiPassword.setToolTipText("Maximum characters exceed!");
                return false;
            }
            else{
                eiPassword.setVisible(false);
                return true;
            }
        }
    }
    
    public boolean ckExistinguname(){
        boolean exist=false;
        try{
            
            String SQL = "select userName from logininfo";
            Statement stmnt = dbcon.createStatement();
            ResultSet rs = stmnt.executeQuery(SQL);
            
            while(rs.next()){
                if(rs.getString("userName").equals(txtUsername.getText())){
                    exist = true;
                    break;
                }
            }
        }
        catch(Exception exc){
            JOptionPane.showMessageDialog(null, "Database Connection Failed!", "Connection Fails",JOptionPane.ERROR_MESSAGE);
        }
        
        if(exist){
            System.out.println("ckExistinguname true");
            return true;
        }
        else{
            return false;
        }
    }
    
    public boolean checkEntryDetails(){
        
        if(cktxtUsername() & cktxtPassword() & cktxtConpassword() & cktxtFname() & cktxtLname() & cktxtNIC() & cktxtAddress() & cktxtCity() &cktxtDOB() & ckGender() & cktxtEmail() & cktxtContactno()){
            return true;
        }
        else{
            return false;
        }
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddImage;
    private javax.swing.JButton btnAddRecip;
    private javax.swing.JButton btnRemoveImage;
    private javax.swing.ButtonGroup btngrpGender;
    private javax.swing.JLabel eiAddress;
    private javax.swing.JLabel eiCity;
    private javax.swing.JLabel eiConpassword;
    private javax.swing.JLabel eiContactno;
    private javax.swing.JLabel eiDOB;
    private javax.swing.JLabel eiEmail;
    private javax.swing.JLabel eiFname;
    private javax.swing.JLabel eiFname1;
    private javax.swing.JLabel eiGender;
    private javax.swing.JLabel eiLname;
    private javax.swing.JLabel eiNIC;
    private javax.swing.JLabel eiPassword;
    private javax.swing.JLabel eiUsername;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblProfPic;
    private javax.swing.JLabel lblRecipId;
    private javax.swing.JPanel profilePic;
    private javax.swing.JRadioButton radioFemale;
    private javax.swing.JRadioButton radioMale;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtCity;
    private javax.swing.JPasswordField txtConpassword;
    private javax.swing.JTextField txtContactno;
    private com.toedter.calendar.JDateChooser txtDOB;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFname;
    private javax.swing.JTextField txtLname;
    private javax.swing.JTextField txtNIC;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
    String imgpath = null;
    byte[] prof_img = null;
    Icon defprofimg;
}
